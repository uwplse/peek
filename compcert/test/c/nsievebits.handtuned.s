# File generated by CompCert 2.4
# Command line: -fno-peeps -stdlib ../../runtime -dc -dclight -dasm -S -o nsievebits.handtuned.s nsievebits.c
	.section	.rodata
	.align	1
__stringlit_1:
	.ascii	"Primes up to %8u %8u\012\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.text
	.align	16
nsieve:
	.cfi_startproc
	subl	$44, %esp
	.cfi_adjust_cfa_offset	44
	leal	48(%esp), %edx
	movl	%edx, 12(%esp)
	movl	%ebx, 16(%esp)
	movl	%esi, 20(%esp)
	movl	%edi, 24(%esp)
	movl	%ebp, 28(%esp)
	movl	0(%edx), %eax
	movl	%eax, 36(%esp)
	movl	36(%esp), %ecx
	shrl	$5, %ecx
	leal	0(,%ecx,4), %edx
	movl	%edx, 0(%esp)
	call	malloc
	movl	%eax, 32(%esp)
	movl	$255, %edx
	movl	36(%esp), %eax
	shrl	$5, %eax
	leal	0(,%eax,4), %ecx
	movl	32(%esp), %eax
	movl	%eax, 0(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, 8(%esp)
	call	memset
	xorl	%eax, %eax
	movl	$2, %edi
.L100:
	movl	36(%esp), %edx
	cmpl	%edx, %edi
	jae	.L101
	movl	%edi, %edx
	shrl	$5, %edx
	movl	32(%esp), %ecx
	movl	0(%ecx,%edx,4), %ebx
	movl	$1, %edx
	movl	%edi, %ecx
	andl	$31, %ecx
	sall	%cl, %edx
	andl	%edx, %ebx
	testl	%ebx, %ebx
	je	.L102
	leal	0(%edi,%edi,1), %edx
.L103:
	movl	36(%esp), %ecx
	cmpl	%ecx, %edx
	jae	.L104
	movl	%edx, %esi
	shrl	$5, %esi
	movl	32(%esp), %ecx
	movl	0(%ecx,%esi,4), %ebx
	movl	$1, %ebp
	movl	%edx, %ecx
	andl	$31, %ecx
	sall	%cl, %ebp
	notl	%ebp
	andl	%ebp, %ebx
	movl	32(%esp), %ecx
	movl	%ebx, 0(%ecx,%esi,4)
	leal	0(%edx,%edi,1), %edx
	jmp	.L103
.L104:
	leal	1(%eax), %eax
.L102:
	leal	1(%edi), %edi
	jmp	.L100
.L101:
	movl	16(%esp), %ebx
	movl	20(%esp), %esi
	movl	24(%esp), %edi
	movl	28(%esp), %ebp
	addl	$44, %esp
	ret
	.cfi_endproc
	.type	nsieve, @function
	.size	nsieve, . - nsieve
	.text
	.align	16
test:
	.cfi_startproc
	subl	$28, %esp
	.cfi_adjust_cfa_offset	28
	leal	32(%esp), %edx
	movl	%edx, 12(%esp)
	movl	%ebx, 16(%esp)
	movl	0(%edx), %ecx
	movl	$1, %ebx
	sall	%cl, %ebx
	imull	$10000, %ebx
	movl	%ebx, 0(%esp)
	call	nsieve
	leal	__stringlit_1, %ecx
	movl	%ecx, 0(%esp)
	movl	%ebx, 4(%esp)
	movl	%eax, 8(%esp)
	call	printf
	movl	16(%esp), %ebx
	addl	$28, %esp
	ret
	.cfi_endproc
	.type	test, @function
	.size	test, . - test
	.text
	.align	16
	.globl main
main:
	.cfi_startproc
	subl	$20, %esp
	.cfi_adjust_cfa_offset	20
	leal	24(%esp), %edx
	movl	%edx, 4(%esp)
	movl	%ebx, 8(%esp)
	movl	0(%edx), %ecx
	movl	4(%edx), %eax
	cmpl	$2, %ecx
	jl	.L105
	movl	4(%eax), %eax
	movl	%eax, 0(%esp)
	call	atoi
	movl	%eax, %ebx
	jmp	.L106
.L105:
	movl	$14, %ebx
.L106:
	movl	%ebx, 0(%esp)
	call	test
	cmpl	$1, %ebx
	jb	.L107
	leal	-1(%ebx), %edx
	movl	%edx, 0(%esp)
	call	test
.L107:
	cmpl	$2, %ebx
	jb	.L108
	leal	-2(%ebx), %eax
	movl	%eax, 0(%esp)
	call	test
.L108:
	xorl	%edx, %edx
	movl	%edx, 0(%esp)
	call	exit
	movl	%esi, %eax
	movl	8(%esp), %ebx
	addl	$20, %esp
	ret
	.cfi_endproc
	.type	main, @function
	.size	main, . - main
