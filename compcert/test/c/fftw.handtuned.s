# File generated by CompCert 2.4
# Command line: -fno-peeps -stdlib ../../runtime -dc -dclight -dasm -S -o fftw.handtuned.s fftw.c
	.section	.rodata
	.align	1
__stringlit_1:
	.ascii	"o[%d] = %.6e\012\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.text
	.align	16
	.globl e01_8
e01_8:
	.cfi_startproc
	subl	$124, %esp
	.cfi_adjust_cfa_offset	124
	leal	128(%esp), %edx
	movl	%edx, 0(%esp)
	movl	%ebx, 4(%esp)
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%ebp, 16(%esp)
	movl	0(%edx), %ecx
	movl	4(%edx), %eax
	movl	8(%edx), %edi
	movl	12(%edx), %ebx
	movl	16(%edx), %ebp
	movl	20(%edx), %edx
	movl	%edx, 40(%esp)
	movl	0(%esp), %edx
	movl	24(%edx), %esi
	movsd	.L100, %xmm0 # 1.66293922460509047
	movsd	%xmm0, 92(%esp)
	movsd	.L101, %xmm2 # 1.11114046603920436
	movsd	%xmm2, 68(%esp)
	movsd	.L102, %xmm4 # 0.390180644032256552
	movsd	%xmm4, 84(%esp)
	movsd	.L103, %xmm6 # 1.96157056080646086
	movsd	%xmm6, 76(%esp)
	movsd	.L104, %xmm5 # 0.707106781186547573
	movsd	%xmm5, 52(%esp)
	movsd	.L105, %xmm7 # 1.41421356237309515
	movsd	%xmm7, 108(%esp)
	movsd	.L106, %xmm1 # 0.765366864730179564
	movsd	%xmm1, 100(%esp)
	movsd	.L107, %xmm3 # 1.84775906502257348
	movsd	%xmm3, 60(%esp)
.L108:
	testl	%ebp, %ebp
	jle	.L109
	movl	8(%edi), %edx
	movsd	0(%ecx,%edx,8), %xmm6	
	movsd	60(%esp), %xmm3
	mulsd	%xmm6, %xmm3
	movapd	%xmm3, %xmm1
	movsd	100(%esp), %xmm7
        movsd   %xmm7, %xmm0
	mulsd	%xmm6, %xmm0
	addsd	%xmm0, %xmm1
	movsd	%xmm1, 44(%esp)
	movsd	%xmm7, %xmm1
	mulsd	%xmm6, %xmm1
	movsd	%xmm7, %xmm2
	mulsd	%xmm6, %xmm2
	movapd	%xmm1, %xmm4
	subsd	%xmm2, %xmm4
	movsd	%xmm4, 32(%esp)
	movsd	0(%ecx), %xmm1
	movl	16(%edi), %edx
	movsd	0(%ecx,%edx,8), %xmm0
	movsd	108(%esp), %xmm7
	mulsd	%xmm0, %xmm7
	movapd	%xmm1, %xmm5
	addsd	%xmm7, %xmm5
	subsd	%xmm7, %xmm1
	movl	4(%edi), %edx
	movsd	0(%ecx,%edx,8), %xmm0
	movl	28(%edi), %edx
	movsd	0(%ecx,%edx,8), %xmm2
	movl	20(%edi), %edx
	movsd	0(%ecx,%edx,8), %xmm3
	movl	12(%edi), %edx
	movsd	0(%ecx,%edx,8), %xmm4
	movapd	%xmm3, %xmm6
	addsd	%xmm4, %xmm6
	movapd	%xmm6, %xmm7
	movsd	52(%esp), %xmm7
	mulsd	%xmm6, %xmm7
	subsd	%xmm4, %xmm3
	movsd	52(%esp), %xmm4
	mulsd	%xmm3, %xmm4
	movapd	%xmm0, %xmm6
	addsd	%xmm7, %xmm6
	movsd	%xmm6, 24(%esp)
	movapd	%xmm4, %xmm3
	addsd	%xmm2, %xmm3
	movapd	%xmm4, %xmm6
	subsd	%xmm2, %xmm6
	subsd	%xmm7, %xmm0
	movsd	44(%esp), %xmm7
	movapd	%xmm5, %xmm4
	addsd	%xmm7, %xmm4
	movsd	76(%esp), %xmm7
	movsd	24(%esp), %xmm2
	mulsd	%xmm2, %xmm7
	movsd	84(%esp), %xmm2
	mulsd	%xmm6, %xmm2
	subsd	%xmm2, %xmm7
	movl	28(%ebx), %edx
	movapd	%xmm4, %xmm2
	subsd	%xmm7, %xmm2
	movsd	%xmm2, 0(%eax,%edx,8)
	addsd	%xmm7, %xmm4
	movsd	%xmm4, 0(%eax)
	movsd	32(%esp), %xmm2
	movapd	%xmm1, %xmm4
	subsd	%xmm2, %xmm4
	movsd	68(%esp), %xmm7
	mulsd	%xmm0, %xmm7
	movsd	92(%esp), %xmm2
	mulsd	%xmm3, %xmm2
	addsd	%xmm2, %xmm7
	movl	20(%ebx), %edx
	movapd	%xmm4, %xmm2
	subsd	%xmm7, %xmm2
	movsd	%xmm2, 0(%eax,%edx,8)
	movl	8(%ebx), %edx
	addsd	%xmm7, %xmm4
	movsd	%xmm4, 0(%eax,%edx,8)
	movsd	44(%esp), %xmm2
	subsd	%xmm2, %xmm5
	movsd	84(%esp), %xmm2
	movsd	24(%esp), %xmm4
	mulsd	%xmm4, %xmm2
	movsd	76(%esp), %xmm4
	mulsd	%xmm6, %xmm4
	movapd	%xmm2, %xmm6
	addsd	%xmm4, %xmm6
	movl	16(%ebx), %edx
	movapd	%xmm5, %xmm7
	subsd	%xmm6, %xmm7
	movsd	%xmm7, 0(%eax,%edx,8)
	movl	12(%ebx), %edx
	addsd	%xmm6, %xmm5
	movsd	%xmm5, 0(%eax,%edx,8)
	movsd	32(%esp), %xmm2
	addsd	%xmm2, %xmm1
	movsd	92(%esp), %xmm4
	mulsd	%xmm0, %xmm4
	movsd	68(%esp), %xmm5
	movapd	%xmm3, %xmm6
	mulsd	%xmm6, %xmm5
	movapd	%xmm4, %xmm6
	subsd	%xmm5, %xmm6
	movl	24(%ebx), %edx
	movapd	%xmm1, %xmm7
	subsd	%xmm6, %xmm7
	movsd	%xmm7, 0(%eax,%edx,8)
	movl	4(%ebx), %edx
	addsd	%xmm6, %xmm1
	movsd	%xmm1, 0(%eax,%edx,8)
	leal	-1(%ebp), %ebp
	movl	40(%esp), %edx
	leal	0(%ecx,%edx,8), %ecx
	leal	0(%eax,%esi,8), %eax
	jmp	.L108
.L109:
	movl	4(%esp), %ebx
	movl	8(%esp), %esi
	movl	12(%esp), %edi
	movl	16(%esp), %ebp
	addl	$124, %esp
	ret
	.cfi_endproc
	.type	e01_8, @function
	.size	e01_8, . - e01_8
	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.L107:	.quad	0x3ffd906bcf328d46
.L106:	.quad	0x3fe87de2a6aea963
.L105:	.quad	0x3ff6a09e667f3bcd
.L104:	.quad	0x3fe6a09e667f3bcd
.L103:	.quad	0x3fff6297cff75cb0
.L102:	.quad	0x3fd8f8b83c69a60b
.L101:	.quad	0x3ff1c73b39ae68c8
.L100:	.quad	0x3ffa9b66290ea1a3
	.local	i
	.comm	i, 8192, 4
	.local	o
	.comm	o, 8192, 4
	.text
	.align	16
	.globl main
main:
	.cfi_startproc
	subl	$92, %esp
	.cfi_adjust_cfa_offset	92
	leal	96(%esp), %edx
	movl	%edx, 28(%esp)
	movl	%ebx, 32(%esp)
	movl	%esi, 36(%esp)
	movl	%edi, 40(%esp)
	movl	%ebp, 44(%esp)
	xorl	%eax, %eax
	movl	%eax, 56(%esp)
	movl	$1, %eax
	movl	%eax, 60(%esp)
	movl	$2, %eax
	movl	%eax, 64(%esp)
	movl	$3, %eax
	movl	%eax, 68(%esp)
	movl	$4, %eax
	movl	%eax, 72(%esp)
	movl	$5, %eax
	movl	%eax, 76(%esp)
	movl	$6, %eax
	movl	%eax, 80(%esp)
	movl	$7, %eax
	movl	%eax, 84(%esp)
	xorl	%edx, %edx
.L110:
	cvtsi2sd %edx, %xmm0
	movsd	%xmm0, i(,%edx,8)
	leal	1(%edx), %edx
	cmpl	$1024, %edx
	jl	.L110
	xorl	%ebx, %ebx
.L111:
	leal	i, %ecx
	movl	%ecx, 52(%esp)
	leal	o, %edx
	leal	56(%esp), %ebp
	leal	56(%esp), %esi
	movl	$64, %ecx
	movl	$8, %edi
	movl	$8, %eax
	movl	%eax, 48(%esp)
	movl	52(%esp), %eax
	movl	%eax, 0(%esp)
	movl	%edx, 4(%esp)
	movl	%ebp, 8(%esp)
	movl	%esi, 12(%esp)
	movl	%ecx, 16(%esp)
	movl	%edi, 20(%esp)
	movl	48(%esp), %eax
	movl	%eax, 24(%esp)
	call	e01_8
	leal	1(%ebx), %ebx
	cmpl	$2097152, %ebx
	jl	.L111
	xorl	%ebx, %ebx
.L112:
	leal	__stringlit_1, %ecx
	movsd	o(,%ebx,8), %xmm3
	movl	%ecx, 0(%esp)
	movl	%ebx, 4(%esp)
	movsd	%xmm3, 8(%esp)
	call	printf
	leal	1(%ebx), %ebx
	cmpl	$16, %ebx
	jl	.L112
	xorl	%eax, %eax
	movl	32(%esp), %ebx
	movl	36(%esp), %esi
	movl	40(%esp), %edi
	movl	44(%esp), %ebp
	addl	$92, %esp
	ret
	.cfi_endproc
	.type	main, @function
	.size	main, . - main
