# File generated by CompCert 2.4
# Command line: -fno-peeps -stdlib ../../runtime -dc -dclight -dasm -S -o nsieve.handtuned.s nsieve.c
	.section	.rodata
	.align	1
__stringlit_1:
	.ascii	"Primes up to %8u %8u\012\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.text
	.align	16
nsieve:
	.cfi_startproc
	subl	$36, %esp
	.cfi_adjust_cfa_offset	36
	leal	40(%esp), %edx
	movl	%edx, 12(%esp)
	movl	%ebx, 16(%esp)
	movl	%esi, 20(%esp)
	movl	%edi, 24(%esp)
	movl	%ebp, 28(%esp)
	movl	0(%edx), %esi
	xorl	%edi, %edi
	movl	%esi, 0(%esp)
	call	malloc
	movl	%eax, %ebx
	movl	$1, %eax
	movl	%ebx, 0(%esp)
	movl	%eax, 4(%esp)
	movl	%esi, 8(%esp)
	call	memset
	movl	$2, %ebp
.L100:
	cmpl	%esi, %ebp
	jae	.L101
	movzbl	0(%ebx,%ebp,1), %ecx
	testl	%ecx, %ecx
	je	.L102
	leal	1(%edi), %edi
	leal	0(,%ebp,2), %edx
.L103:
	cmpl	%esi, %edx
	jae	.L102
	movzbl	0(%ebx,%edx,1), %eax
	testl	%eax, %eax
	je	.L104
	xorl	%eax, %eax
	movb	%al, 0(%ebx,%edx,1)
.L104:
	leal	0(%edx,%ebp,1), %edx
	jmp	.L103
.L102:
	leal	1(%ebp), %ebp
	jmp	.L100
.L101:
	movl	%ebx, 0(%esp)
	call	free
	leal	__stringlit_1, %ecx
	movl	%ecx, 0(%esp)
	movl	%esi, 4(%esp)
	movl	%edi, 8(%esp)
	call	printf
	movl	16(%esp), %ebx
	movl	20(%esp), %esi
	movl	24(%esp), %edi
	movl	28(%esp), %ebp
	addl	$36, %esp
	ret
	.cfi_endproc
	.type	nsieve, @function
	.size	nsieve, . - nsieve
	.text
	.align	16
	.globl main
main:
	.cfi_startproc
	subl	$20, %esp
	.cfi_adjust_cfa_offset	20
	leal	24(%esp), %edx
	movl	%edx, 4(%esp)
	movl	%ebx, 8(%esp)
	movl	%esi, 12(%esp)
	movl	0(%edx), %ebx
	movl	4(%edx), %eax
	cmpl	$2, %ebx
	jl	.L105
	movl	4(%eax), %edx
	movl	%edx, 0(%esp)
	call	atoi
	movl	%eax, %ebx
	jmp	.L106
.L105:
	movl	$9, %ebx
.L106:
	xorl	%esi, %esi
.L107:
	movl	$400000, %eax
	movl	%ebx, %ecx
	subl	%esi, %ecx
	sall	%cl, %eax
	movl	%eax, 0(%esp)
	call	nsieve
	leal	1(%esi), %esi
	cmpl	$3, %esi
	jl	.L107
	xorl	%eax, %eax
	movl	8(%esp), %ebx
	movl	12(%esp), %esi
	addl	$20, %esp
	ret
	.cfi_endproc
	.type	main, @function
	.size	main, . - main
