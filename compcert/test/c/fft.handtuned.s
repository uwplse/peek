# File generated by CompCert 2.4
# Command line: -fno-peeps -stdlib ../../runtime -dc -dclight -dasm -S -o fft.handtuned.s fft.c
	.section	.rodata
	.align	1
__stringlit_2:
	.ascii	"result OK\000"
	.type	__stringlit_2, @object
	.size	__stringlit_2, . - __stringlit_2
	.section	.rodata
	.align	1
__stringlit_3:
	.ascii	"%d points, %s\012\000"
	.type	__stringlit_3, @object
	.size	__stringlit_3, . - __stringlit_3
	.section	.rodata
	.align	1
__stringlit_1:
	.ascii	"WRONG result\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.text
	.align	16
	.globl dfft
dfft:
	.cfi_startproc
	subl	$116, %esp
	.cfi_adjust_cfa_offset	116
	leal	120(%esp), %edx
	movl	%edx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	%esi, 16(%esp)
	movl	%edi, 20(%esp)
	movl	%ebp, 24(%esp)
	movl	0(%edx), %ebx
	movl	4(%edx), %ecx
	movl	8(%edx), %eax
	leal	-8(%ebx), %ebx
	leal	-8(%ecx), %esi
	movl	$2, %edx	
	movl	$1, 72(%esp)
.L100:
	cmpl	%eax, %edx
	jge	.L101
	leal	0(%edx,%edx,1), %edx
	movl	72(%esp), %ecx
	leal	1(%ecx), %ecx
	movl	%ecx, 72(%esp)
	jmp	.L100
.L101:
	movl	%edx, 48(%esp)
	movl	48(%esp), %ecx
	cmpl	%eax, %ecx
	je	.L102
	leal	1(%eax), %edx
.L103:
	movl	48(%esp), %ecx
	cmpl	%ecx, %edx
	jg	.L102
	xorpd	%xmm4, %xmm4
	movsd	%xmm4, 0(%ebx,%edx,8)
	movsd	%xmm4, 0(%esi,%edx,8)
	leal	1(%edx), %edx
	jmp	.L103
.L102:
	movl	48(%esp), %edx
        sall    $1, %edx	
	movl	%edx, 40(%esp)
	movsd	.L104, %xmm4 # 6.28318530717958623
	movsd	%xmm4, 96(%esp)	
	movl	$1, 60(%esp)
.L105:
	movl	72(%esp), %edx
	leal	-1(%edx), %ecx
	movl	60(%esp), %edx
	cmpl	%ecx, %edx
	jg	.L106
	movl	40(%esp), %eax
	testl	%eax, %eax
	leal	1(%eax), %ecx
	cmovl	%ecx, %eax
	sarl	$1, %eax
	movl	%eax, 40(%esp)	
	testl	%eax, %eax
	leal	3(%eax), %ecx
	cmovl	%ecx, %eax
	sarl	$2, %eax
	movl	%eax, 84(%esp)
	movl	40(%esp), %eax
	cvtsi2sd %eax, %xmm3
	movsd	96(%esp), %xmm1
	divsd	%xmm3, %xmm1
	movsd	%xmm1, 104(%esp)
	xorpd	%xmm5, %xmm5
	movsd	%xmm5, 88(%esp)	
	movl	$1, 44(%esp)
.L107:
	movl	44(%esp), %ecx
	movl	84(%esp), %eax
	cmpl	%eax, %ecx
	jg	.L108
	movsd	.L109, %xmm2 # 3
	movsd	88(%esp), %xmm1
	mulsd	%xmm1, %xmm2
	movsd	%xmm2, 52(%esp)
	movsd	%xmm1, 0(%esp)
	call	cos
	fstpl	64(%esp)
	movsd	88(%esp), %xmm6
	movsd	%xmm6, 0(%esp)
	call	sin
	fstpl	32(%esp)
	movsd	52(%esp), %xmm0
	movsd	%xmm0, 0(%esp)
	call	cos
	fstpl	76(%esp)
	movsd	52(%esp), %xmm3
	movsd	%xmm3, 0(%esp)
	call	sin
	fstpl	52(%esp)
	movsd	52(%esp), %xmm2
	movl	44(%esp), %eax
	cvtsi2sd %eax, %xmm0
	movsd	104(%esp), %xmm7
	mulsd	%xmm0, %xmm7
	movsd	%xmm7, 88(%esp)	
	movl	40(%esp), %edx
	leal	0(,%edx,2), %edi
.L110:
	movl	48(%esp), %ecx
	cmpl	%ecx, %eax
	jge	.L111
	movl	%eax, %ebp
.L112:
	movl	48(%esp), %edx
	leal	-1(%edx), %edx
	cmpl	%edx, %ebp
	jg	.L113
	movl	84(%esp), %eax
	leal	0(%ebp,%eax,1), %ecx
	leal	0(%ecx,%eax,1), %edx
	leal	0(%edx,%eax,1), %eax
	movsd	0(%ebx,%ebp,8), %xmm0
	movsd	0(%ebx,%edx,8), %xmm7
	movapd	%xmm0, %xmm1
	subsd	%xmm7, %xmm1
	addsd	%xmm7, %xmm0
	movsd	%xmm0, 0(%ebx,%ebp,8)
	movsd	0(%ebx,%ecx,8), %xmm3
	movsd	0(%ebx,%eax,8), %xmm4
	movapd	%xmm3, %xmm0
	subsd	%xmm4, %xmm0
	addsd	%xmm4, %xmm3
	movsd	%xmm3, 0(%ebx,%ecx,8)
	movsd	0(%esi,%ebp,8), %xmm5
	movsd	0(%esi,%edx,8), %xmm6
	movapd	%xmm5, %xmm3
	subsd	%xmm6, %xmm3
	addsd	%xmm6, %xmm5
	movsd	%xmm5, 0(%esi,%ebp,8)
	movsd	0(%esi,%ecx,8), %xmm5
	movsd	0(%esi,%eax,8), %xmm6
	movapd	%xmm5, %xmm4
	subsd	%xmm6, %xmm4
	addsd	%xmm6, %xmm5
	movsd	%xmm5, 0(%esi,%ecx,8)
	movapd	%xmm1, %xmm5
	subsd	%xmm4, %xmm5
	addsd	%xmm4, %xmm1
	movapd	%xmm0, %xmm4
	subsd	%xmm3, %xmm4
	addsd	%xmm3, %xmm0	
	movapd	%xmm1, %xmm3
	mulsd	64(%esp), %xmm3
	movsd	32(%esp), %xmm6
	movapd	%xmm4, %xmm7
	mulsd	%xmm6, %xmm7
	subsd	%xmm7, %xmm3
	movsd	%xmm3, 0(%ebx,%edx,8)
	xorpd	__negd_mask, %xmm4
	mulsd	64(%esp), %xmm4	
	mulsd	%xmm6, %xmm1
	subsd	%xmm1, %xmm4
	movsd	%xmm4, 0(%esi,%edx,8)
	movsd	76(%esp), %xmm6
	movapd	%xmm5, %xmm3
	mulsd	%xmm6, %xmm3
	movapd	%xmm0, %xmm4
	mulsd	%xmm2, %xmm4
	addsd	%xmm4, %xmm3
	movsd	%xmm3, 0(%ebx,%eax,8)	
	mulsd	%xmm6, %xmm0
	mulsd	%xmm2, %xmm5
	subsd	%xmm5, %xmm0
	movsd	%xmm0, 0(%esi,%eax,8)
	leal	0(%ebp,%edi,1), %ebp
	jmp	.L112
.L113:
	leal	0(,%edi,2), %eax
	movl	40(%esp), %ecx
	subl	%ecx, %eax
	movl	44(%esp), %edx
	leal	0(%eax,%edx,1), %eax
	leal	0(,%edi,4), %edi
	jmp	.L110
.L111:
	movl	44(%esp), %edx
	leal	1(%edx), %eax
	movl	%eax, 44(%esp)
	jmp	.L107
.L108:
	movl	60(%esp), %eax
	leal	1(%eax), %eax
	movl	%eax, 60(%esp)
	jmp	.L105
.L106:
	movl	$1, %edi
	movl	$4, %eax
.L114:
	movl	48(%esp), %ecx
	cmpl	%ecx, %edi
	jge	.L115
.L116:
	movl	48(%esp), %edx
	cmpl	%edx, %edi
	jg	.L117
	leal	1(%edi), %ecx
	movsd	0(%ebx,%edi,8), %xmm2
	movsd	0(%ebx,%ecx,8), %xmm1
	movapd	%xmm2, %xmm3
	addsd	%xmm1, %xmm3
	movsd	%xmm3, 0(%ebx,%edi,8)
	movsd	0(%ebx,%ecx,8), %xmm4
	subsd	%xmm4, %xmm2
	movsd	%xmm2, 0(%ebx,%ecx,8)
	movsd	0(%esi,%edi,8), %xmm5
	movsd	0(%esi,%ecx,8), %xmm1
	movapd	%xmm5, %xmm6
	addsd	%xmm1, %xmm6
	movsd	%xmm6, 0(%esi,%edi,8)
	movsd	0(%esi,%ecx,8), %xmm6
	subsd	%xmm6, %xmm5
	movsd	%xmm5, 0(%esi,%ecx,8)
	leal	0(%edi,%eax,1), %edi
	jmp	.L116
.L117:
	leal	-1(,%eax,2), %edi
	leal	0(,%eax,4), %eax
	jmp	.L114
.L115:
	movl	$1, %ebp
	leal	-1(%ecx), %edi
	movl	$1, %edx
.L118:
	cmpl	%edi, %edx
	jg	.L119
	cmpl	%ebp, %edx
	jge	.L120
	movsd	0(%ebx,%ebp,8), %xmm2
	movsd	0(%ebx,%edx,8), %xmm0
	movsd	%xmm0, 0(%ebx,%ebp,8)
	movsd	%xmm2, 0(%ebx,%edx,8)
	movsd	0(%esi,%ebp,8), %xmm6
	movsd	0(%esi,%edx,8), %xmm7
	movsd	%xmm7, 0(%esi,%ebp,8)
	movsd	%xmm6, 0(%esi,%edx,8)
.L120:
	movl	48(%esp), %eax
	testl	%eax, %eax
	leal	1(%eax), %ecx
	cmovl	%ecx, %eax
	sarl	$1, %eax
.L121:
	cmpl	%ebp, %eax
	jge	.L122
	subl	%eax, %ebp
	testl	%eax, %eax
	leal	1(%eax), %ecx
	cmovl	%ecx, %eax
	sarl	$1, %eax
	jmp	.L121
.L122:
	leal	0(%ebp,%eax,1), %ebp
	leal	1(%edx), %edx
	jmp	.L118
.L119:
	movl	48(%esp), %eax
	movl	12(%esp), %ebx
	movl	16(%esp), %esi
	movl	20(%esp), %edi
	movl	24(%esp), %ebp
	addl	$116, %esp
	ret
	.cfi_endproc
	.type	dfft, @function
	.size	dfft, . - dfft
	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.L109:	.quad	0x4008000000000000
.L104:	.quad	0x401921fb54442d18
	.comm	xr, 4, 4
	.comm	xi, 4, 4
	.text
	.align	16
	.globl main
main:
	.cfi_startproc
	subl	$76, %esp
	.cfi_adjust_cfa_offset	76
	leal	80(%esp), %edx
	movl	%edx, 12(%esp)
	movl	%ebx, 16(%esp)
	movl	%esi, 20(%esp)
	movl	%edi, 24(%esp)
	movl	%ebp, 28(%esp)
	movl	0(%edx), %eax
	movl	4(%edx), %ecx
	cmpl	$2, %eax
	jl	.L123
	movl	4(%ecx), %ecx
	movl	%ecx, 0(%esp)
	call	atoi
	jmp	.L124
.L123:
	movl	$22, %eax
.L124:
	movl	$1, %ebx
	movl	%eax, %ecx
	sall	%cl, %ebx
	cvtsi2sd %ebx, %xmm1
	movsd	%xmm1, 32(%esp)
	movl	%ebx, %eax
	testl	%eax, %eax
	leal	1(%eax), %ecx
	cmovl	%ecx, %eax
	sarl	$1, %eax
	leal	-1(%eax), %edx
	movl	%edx, 40(%esp)
	movsd	.L125, %xmm2 # 3.14159265358979312
	movsd	32(%esp), %xmm7
	divsd	%xmm7, %xmm2
	movsd	%xmm2, 60(%esp)
	movl	$8, %eax
	movl	%ebx, 0(%esp)
	movl	%eax, 4(%esp)
	call	calloc
	movl	%eax, xr
	movl	$8, %ecx
	movl	%ebx, 0(%esp)
	movl	%ecx, 4(%esp)
	call	calloc
	movl	%eax, %esi
	movl	%esi, xi
	movl	xr, %ebp
	movsd	.L126, %xmm3 # 1
	movsd	32(%esp), %xmm2
	subsd	%xmm3, %xmm2
	movsd	.L127, %xmm5 # 0.5
	mulsd	%xmm5, %xmm2
	movsd	%xmm2, 0(%ebp)
	xorpd	%xmm1, %xmm1
	movsd	%xmm1, 0(%esi)
	movl	%ebx, %eax
	testl	%eax, %eax
	leal	1(%eax), %ecx
	cmovl	%ecx, %eax
	sarl	$1, %eax
	movsd	.L128, %xmm2 # -0.5
	movsd	%xmm2, 0(%ebp,%eax,8)
	movsd	%xmm1, 0(%esi,%eax,8)
	movl	$1, %edi
.L129:
	movl	40(%esp), %eax
	cmpl	%eax, %edi
	jg	.L130
	movl	%ebx, %eax
	subl	%edi, %eax
	movl	%eax, 32(%esp)
	movsd	.L131, %xmm6 # -0.5
	movsd	%xmm6, 0(%ebp,%edi,8)
	movl	32(%esp), %eax
	movsd	%xmm6, 0(%ebp,%eax,8)
	cvtsi2sd %edi, %xmm3
	movsd	60(%esp), %xmm1
	mulsd	%xmm3, %xmm1
	movsd	%xmm1, 52(%esp)
	movsd	%xmm1, 0(%esp)
	call	cos
	fstpl	44(%esp)
	movsd	52(%esp), %xmm0
	movsd	%xmm0, 0(%esp)
	call	sin
	fstpl	52(%esp)
	movsd	52(%esp), %xmm2
	movsd	.L132, %xmm7 # -0.5
	movsd	44(%esp), %xmm4
	divsd	%xmm2, %xmm4
	mulsd	%xmm4, %xmm7
	movsd	%xmm7, 0(%esi,%edi,8)
	xorpd	__negd_mask, %xmm7
	movl	32(%esp), %ecx
	movsd	%xmm7, 0(%esi,%ecx,8)
	leal	1(%edi), %edi
	jmp	.L129
.L130:
	movl	xr, %ecx
	movl	xi, %edx
	movl	%ecx, 0(%esp)
	movl	%edx, 4(%esp)
	movl	%ebx, 8(%esp)
	call	dfft
	xorpd	%xmm3, %xmm3
	movsd	%xmm3, 44(%esp)
	movsd	%xmm3, 32(%esp)
	leal	-1(%ebx), %ecx
	movl	%ecx, 40(%esp)
	xorl	%edi, %edi
.L133:
	movl	40(%esp), %edx
	cmpl	%edx, %edi
	jg	.L134
	movsd	0(%ebp,%edi,8), %xmm5
	cvtsi2sd %edi, %xmm1
	subsd	%xmm1, %xmm5
	movsd	%xmm5, 0(%esp)
	call	fabs
	fstpl	52(%esp)
	movsd	52(%esp), %xmm4
	movsd	44(%esp), %xmm3
	comisd	%xmm3, %xmm4
	jbe	.L135
	movsd	%xmm4, 44(%esp)
.L135:
	movsd	0(%esi,%edi,8), %xmm6
	movsd	%xmm6, 0(%esp)
	call	fabs
	fstpl	52(%esp)
	movsd	52(%esp), %xmm1
	movsd	32(%esp), %xmm0
	comisd	%xmm0, %xmm1
	jbe	.L136
	movsd	%xmm1, 32(%esp)
.L136:
	leal	1(%edi), %edi
	jmp	.L133
.L134:
	movsd	44(%esp), %xmm5
	movsd	32(%esp), %xmm6
	comisd	%xmm5, %xmm6
	jbe	.L137
	movapd	%xmm6, %xmm5
.L137:
	movsd	.L138, %xmm4 # 1.00000000000000006e-09
	comisd	%xmm5, %xmm4
	ja	.L139
	leal	__stringlit_1, %ecx
	jmp	.L140
.L139:
	leal	__stringlit_2, %ecx
.L140:
	leal	__stringlit_3, %edx
	movl	%edx, 0(%esp)
	movl	%ebx, 4(%esp)
	movl	%ecx, 8(%esp)
	call	printf
	xorl	%eax, %eax
	movl	16(%esp), %ebx
	movl	20(%esp), %esi
	movl	24(%esp), %edi
	movl	28(%esp), %ebp
	addl	$76, %esp
	ret
	.cfi_endproc
	.type	main, @function
	.size	main, . - main
	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.L138:	.quad	0x3e112e0be826d695
.L132:	.quad	0xbfe0000000000000
.L131:	.quad	0xbfe0000000000000
.L128:	.quad	0xbfe0000000000000
.L127:	.quad	0x3fe0000000000000
.L126:	.quad	0x3ff0000000000000
.L125:	.quad	0x400921fb54442d18
	.section	.rodata
	.align	16
__negd_mask:	.quad   0x8000000000000000, 0
__absd_mask:	.quad   0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF
__negs_mask:	.long   0x80000000, 0, 0, 0
__abss_mask:	.long   0x7FFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
