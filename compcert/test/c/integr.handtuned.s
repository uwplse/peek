# File generated by CompCert 2.4
# Command line: -fno-peeps -stdlib ../../runtime -dc -dclight -dasm -S -o integr.handtuned.s integr.c
	.section	.rodata
	.align	1
__stringlit_1:
	.ascii	"integr(square, 0.0, 1.0, %d) = %g\012\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.text
	.align	16
square:
	.cfi_startproc
	subl	$20, %esp
	.cfi_adjust_cfa_offset	20
	leal	24(%esp), %edx
	movl	%edx, 0(%esp)
	movsd	0(%edx), %xmm0
	mulsd	%xmm0, %xmm0
	movsd	%xmm0, 8(%esp)
	fldl	8(%esp)
	addl	$20, %esp
	ret
	.cfi_endproc
	.type	square, @function
	.size	square, . - square
	.text
	.align	16
integr:
	.cfi_startproc
	subl	$60, %esp
	.cfi_adjust_cfa_offset	60
	leal	64(%esp), %edx
	movl	%edx, 8(%esp)
	movl	%ebx, 12(%esp)
	movl	%esi, 16(%esp)
	movl	0(%edx), %esi
	movsd	4(%edx), %xmm0
	movsd	12(%edx), %xmm6
	movl	20(%edx), %ebx
	subsd	%xmm0, %xmm6
	cvtsi2sd %ebx, %xmm3
	divsd	%xmm3, %xmm6
	movsd	%xmm6, 40(%esp)
	xorpd	%xmm4, %xmm4
	movsd	%xmm4, 32(%esp)
	movsd	%xmm0, 24(%esp)
.L100:
	testl	%ebx, %ebx
	jle	.L101
	movsd	24(%esp), %xmm1
	movsd	%xmm1, 0(%esp)
	call	*%esi
	fstpl	48(%esp)
	movsd	48(%esp), %xmm2
	movsd	32(%esp), %xmm7
	addsd	%xmm2, %xmm7
	movsd	%xmm7, 32(%esp)
	leal	-1(%ebx), %ebx
	movsd	24(%esp), %xmm2
	movsd	40(%esp), %xmm3
	addsd	%xmm3, %xmm2
	movsd	%xmm2, 24(%esp)
	jmp	.L100
.L101:
	movsd	32(%esp), %xmm0
	movsd	40(%esp), %xmm5
	mulsd	%xmm5, %xmm0
	movsd	%xmm0, 24(%esp)
	fldl	24(%esp)
	movl	12(%esp), %ebx
	movl	16(%esp), %esi
	addl	$60, %esp
	ret
	.cfi_endproc
	.type	integr, @function
	.size	integr, . - integr
	.text
	.align	16
	.globl test
test:
	.cfi_startproc
	subl	$44, %esp
	.cfi_adjust_cfa_offset	44
	leal	48(%esp), %edx
	movl	%edx, 24(%esp)
	movl	0(%edx), %ecx
	leal	square, %edx
	xorpd	%xmm2, %xmm2
	movsd	.L102, %xmm3 # 1
	movl	%edx, 0(%esp)
	movsd	%xmm2, 4(%esp)
	movsd	%xmm3, 12(%esp)
	movl	%ecx, 20(%esp)
	call	integr
	fstpl	32(%esp)
	movsd	32(%esp), %xmm0
	movsd	%xmm0, 32(%esp)
	fldl	32(%esp)
	addl	$44, %esp
	ret
	.cfi_endproc
	.type	test, @function
	.size	test, . - test
	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.L102:	.quad	0x3ff0000000000000
	.text
	.align	16
	.globl main
main:
	.cfi_startproc
	subl	$36, %esp
	.cfi_adjust_cfa_offset	36
	leal	40(%esp), %edx
	movl	%edx, 16(%esp)
	movl	%ebx, 20(%esp)
	movl	0(%edx), %ecx
	movl	4(%edx), %ebx
	cmpl	$2, %ecx
	jl	.L103
	movl	4(%ebx), %ecx
	movl	%ecx, 0(%esp)
	call	atoi
	movl	%eax, %ebx
	jmp	.L104
.L103:
	movl	$1000000000, %ebx
.L104:
	movl	%ebx, 0(%esp)
	call	test
	fstpl	24(%esp)
	movsd	24(%esp), %xmm0
	leal	__stringlit_1, %eax
	movl	%eax, 0(%esp)
	movl	%ebx, 4(%esp)
	movsd	%xmm0, 8(%esp)
	call	printf
	xorl	%eax, %eax
	movl	20(%esp), %ebx
	addl	$36, %esp
	ret
	.cfi_endproc
	.type	main, @function
	.size	main, . - main
